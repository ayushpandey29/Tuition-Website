{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitya\\\\OneDrive\\\\Desktop\\\\Project\\\\Tuition-Website\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button } from './Button';\nimport '../css/Login.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); // Store email input\n  const [password, setPassword] = useState(\"\"); // Store password input\n\n  // Hook for programmatic navigation between routes\n  let navigate = useNavigate();\n\n  // Effect hook that runs when component mounts\n  useEffect(() => {\n    validateToken(); // Check if user is already logged in\n  }, []); // Empty dependency array means this runs only once\n\n  /**\r\n   * Function to validate if user has a valid token stored locally\r\n   * For demo purposes, just check if user data exists\r\n   */\n  async function validateToken() {\n    // Get user info from browser's local storage\n    var user = JSON.parse(localStorage.getItem('user-info'));\n\n    // Check if user data exists\n    if (user != null) {\n      // User already logged in, redirect to home\n      navigate(\"/\");\n    }\n  }\n\n  /**\r\n   * Frontend-only login simulation\r\n   * Creates a mock user session for demo purposes\r\n   */\n  async function login() {\n    // Simple validation\n    if (!email || !password) {\n      alert(\"Please fill in both email and password\");\n      return;\n    }\n\n    // Create mock user data for frontend demo\n    const mockUserData = {\n      message: \"Login successful!\",\n      token: {\n        data: {\n          id: 1,\n          name: \"Demo User\",\n          email: email,\n          phone: \"123-456-7890\",\n          is_instructor: 0\n        },\n        exp: Math.round(Date.now() / 1000) + 24 * 60 * 60 // 24 hours from now\n      }\n    };\n\n    // Store user info in localStorage for frontend demo\n    localStorage.setItem('user-info', JSON.stringify(mockUserData));\n    alert(\"Login successful! (Frontend Demo Mode)\");\n    navigate(\"/\");\n  }\n\n  // Render the login form\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            onChange: e => setEmail(e.target.value) // Update email state on input change\n            ,\n            id: \"email\",\n            placeholder: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: e => setPassword(e.target.value) // Update password state on input change\n            ,\n            id: \"password\",\n            placeholder: \"Enter Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"vKvWtYiX7d9SDlgEm06zgmWBgq8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","Button","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","navigate","validateToken","user","JSON","parse","localStorage","getItem","login","alert","mockUserData","message","token","data","id","name","phone","is_instructor","exp","Math","round","Date","now","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","action","htmlFor","type","onChange","e","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nitya/OneDrive/Desktop/Project/Tuition-Website/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button } from './Button';\r\nimport '../css/Login.css'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");       // Store email input\r\n    const [password, setPassword] = useState(\"\"); // Store password input\r\n    \r\n    // Hook for programmatic navigation between routes\r\n    let navigate = useNavigate();\r\n    \r\n    // Effect hook that runs when component mounts\r\n    useEffect(() => {\r\n        validateToken() // Check if user is already logged in\r\n    }, []); // Empty dependency array means this runs only once\r\n    \r\n    /**\r\n     * Function to validate if user has a valid token stored locally\r\n     * For demo purposes, just check if user data exists\r\n     */\r\n    async function validateToken() {\r\n        // Get user info from browser's local storage\r\n        var user = JSON.parse(localStorage.getItem('user-info'));\r\n        \r\n        // Check if user data exists\r\n        if (user != null) {\r\n            // User already logged in, redirect to home\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Frontend-only login simulation\r\n     * Creates a mock user session for demo purposes\r\n     */\r\n    async function login() {\r\n        // Simple validation\r\n        if (!email || !password) {\r\n            alert(\"Please fill in both email and password\");\r\n            return;\r\n        }\r\n\r\n        // Create mock user data for frontend demo\r\n        const mockUserData = {\r\n            message: \"Login successful!\",\r\n            token: {\r\n                data: {\r\n                    id: 1,\r\n                    name: \"Demo User\",\r\n                    email: email,\r\n                    phone: \"123-456-7890\",\r\n                    is_instructor: 0\r\n                },\r\n                exp: Math.round(Date.now() / 1000) + (24 * 60 * 60) // 24 hours from now\r\n            }\r\n        };\r\n\r\n        // Store user info in localStorage for frontend demo\r\n        localStorage.setItem('user-info', JSON.stringify(mockUserData));\r\n        \r\n        alert(\"Login successful! (Frontend Demo Mode)\");\r\n        navigate(\"/\");\r\n    }\r\n    \r\n    // Render the login form\r\n    return (\r\n        <>\r\n            {/* Main container for login form */}\r\n            <div className='container'>\r\n                <h1>Welcome Back</h1>\r\n                \r\n                {/* Login form - action is empty since we handle submission with JavaScript */}\r\n                <form action=\"\" className=\"form-control\">\r\n\r\n                    {/* Email input field */}\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email*</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"email\" \r\n                            onChange={(e) => setEmail(e.target.value)} // Update email state on input change\r\n                            id=\"email\" \r\n                            placeholder=\"Enter Your Email\" \r\n                        />\r\n                    </div>\r\n\r\n                    {/* Password input field */}\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password*</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            onChange={(e) => setPassword(e.target.value)} // Update password state on input change\r\n                            id=\"password\" \r\n                            placeholder=\"Enter Your Password\" \r\n                        />\r\n                    </div>\r\n\r\n                    {/* Login button - calls login function when clicked */}\r\n                    <div>\r\n                        <Button onClick={login}>Login</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}